{"version":3,"sources":["../../src/data/schema.js"],"names":["gql","require","typeDefs","module","exports"],"mappings":";;AAAA;;AAEA,MAAM,EAAEA,GAAF,KAAUC,QAAQ,uBAAR,CAAhrB;;AAurBAG,OAAOC,OAAP,GAAiBF,QAAjB","file":"schema.js","sourcesContent":["// data/schema.js\n\nconst { gql } = require('apollo-server-express');\n\n\n// Define our schema using the GraphQL schema language\nconst typeDefs = gql`\n  scalar Date\n\n  type Thresholds {\n    \"Master key signing weight for the account\"\n    master_weight: Int\n    \"Signing weight for low threshold transactions on the account\"\n    low_threshold: Int\n    \"Signing weight for medium threshold transactions on the account\"\n    med_threshold: Int\n    \"Signing weight for high threshold transactions on the account\"\n    high_threshold: Int\n  }\n  type Signer {\n    \"Public key that uniquely identifies the account\"\n    public_key: String\n    \"Signing weight set on the account for that public key\"\n    weight: Int\n    \"TODO\"\n    key: String\n    \"TODO\"\n    type: String\n    \"Flag to indicate if master key weight\"\n    master: Boolean\n  }\n  enum Flag_Type{\n    \"With this setting, none of the following authorization flags can be changed.\"\n    auth_immutable\n    \"With this setting, an anchor must approve anyone who wants to hold its asset.\"\n    auth_required\n    \"With this setting, an anchor can set the authorize flag of an existing trustline to freeze the assets held by an asset holder.\"\n    auth_revocable\n  }\n  type Flags {\n    \"With this setting, an anchor must approve anyone who wants to hold its asset.\"\n    auth_required: Boolean\n    \"With this setting, an anchor can set the authorize flag of an existing trustline to freeze the assets held by an asset holder.\"\n    auth_revocable: Boolean\n    \"With this setting, none of the following authorization flags can be changed.\"\n    auth_immutable: Boolean\n  }\n\n  type TF_Account implements Account {\n    id: ID!\n    \"Email address for user.  Will be used as display name of user and for login\"\n    email: String!\n    \"Tenant id that the user is a member of\"\n    tenantId: String!\n    \"The description of the account\"\n    description: String\n    \"Public key that uniquely identifies the account\"\n    public_key: String!\n    \"Thresholds for the account\"\n    thresholds: Thresholds!\n    \"Asset balances for the account\"\n    balances: [Balance]!\n    \"Signers for the account\"\n    signers: [Signer]!\n    \"Accounts may optionally have a home domain specified. This allows an account to specify where is the main provider for that account.\"\n    home_domain: String\n    \"Flags for the account\"\n    flags: Flags!\n    \"Creation date of the account\"\n    createdAt: Date!\n    \"Last modified date of the account\"\n    updatedAt: Date!\n  }\n\n  type Core_Account implements Account {\n    \"Public key that uniquely identifies the account\"\n    public_key: String!\n    \"Thresholds for the account\"\n    thresholds: Thresholds!\n    \"Asset balances for the account\"\n    balances: [Balance]!\n    \"Signers for the account\"\n    signers: [Signer]!\n    \"Accounts may optionally have a home domain specified. This allows an account to specify where is the main provider for that account.\"\n    home_domain: String\n    \"Flags for the account\"\n    flags: Flags!\n  }\n\n  interface Account {\n    \"Public key that uniquely identifies the account\"\n    public_key: String!\n    \"Thresholds for the account\"\n    thresholds: Thresholds\n    \"Asset balances for the account\"\n    balances: [Balance]\n    \"Signers for the account\"\n    signers: [Signer]\n    \"Accounts may optionally have a home domain specified. This allows an account to specify where is the main provider for that account.\"\n    home_domain: String\n    \"Flags for the account\"\n    flags: Flags\n  }\n\n  type Core_Asset implements Asset {\n    \"Public key of the asset issuer (creator)\"\n    asset_issuer: String\n    \"Alphanumeric class that identifies the asset type\"\n    asset_type: String!\n    \"Alphanumeric code that uniquely identifies the asset\"\n    asset_code: String\n  }\n\n  type TF_Asset implements Asset {\n    \"Public key of the asset issuer (creator)\"\n    asset_issuer: String\n    \"Alphanumeric class that identifies the asset type\"\n    asset_type: String!\n    \"Alphanumeric code that uniquely identifies the asset\"\n    asset_code: String\n    \"The description of the asset\"\n    description: String\n    \"Email address for user.  Will be used as display name of user and for login\"\n    email: String!\n    \"Tenant id that the user is a member of\"\n    tenantId: String!\n    \"Creation date of the asset\"\n    createdAt: Date!\n    \"Last modified date of the asset\"\n    updatedAt: Date!\n  }\n\n  interface Asset {\n    \"Public key of the asset issuer (creator)\"\n    asset_issuer: String\n    \"Alphanumeric class that identifies the asset type\"\n    asset_type: String!\n    \"Alphanumeric code that uniquely identifies the asset\"\n    asset_code: String\n  }\n\n  type Set_Signers implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when signer was added\"\n    created_at: Date!\n    \"Signer public key\"\n    signer_key: String!\n    \"Memo attached to the transaction\"\n    memo: String\n    \"Signer weight\"\n    signer_weight: Int!\n  }\n\n  type Set_Threshold implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the threshold was added\"\n    created_at: Date!\n    \"Master key signing weight for the account\"\n    master_key_weight: Int!\n    \"Signing weight for low threshold transactions on the account\"\n    low_threshold: Int!\n    \"Signing weight for medium threshold transactions on the account\"\n    med_threshold: Int!\n    \"Signing weight for high threshold transactions on the account\"\n    high_threshold: Int!\n  }\n  type Create_Account implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the account was created\"\n    created_at: Date!\n    \"Starting balance of the account\"\n    starting_balance: String!\n    \"Public key from where the funds were loaded from\"\n    funder: String!\n    \"TODO\"\n    account: String!\n  }\n  type Allow_Trust implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the change trust was created\"\n    created_at: Date!\n    \"Type of asset\"\n    asset_type: String!\n    \"Alphanumeric code that uniquely identifies the asset\"\n    asset_code: String\n    \"Public key of the acount that issued the asset\"\n    asset_issuer: String\n    \"Trustors public key\"\n    trustor: String!\n    \"Trustee public key\"\n    trustee: String!\n    \"Enabling or disabling the allowing of trust for a given asset\"\n    authorize: Boolean!\n  }\n\n  type Change_Trust implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the change trust was created\"\n    created_at: Date!\n    \"Type of asset\"\n    asset_type: String!\n    \"Alphanumeric code that uniquely identifies the asset\"\n    asset_code: String\n    \"Public key of the acount that issued the asset\"\n    asset_issuer: String\n    \"Trustline limit for the asset\"\n    limit: String!\n    \"Trustors public key\"\n    trustor: String!\n    \"Trustee public key\"\n    trustee: String!\n  }\n  type Payment implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the payment was created\"\n    created_at: Date!\n    \"Type of asset\"\n    asset_type: String!\n    \"Alphanumeric code that uniquely identifies the asset\"\n    asset_code: String\n    \"Public key of the acount that issued the asset\"\n    asset_issuer: String\n    \"Public key of the sender of the payment\"\n    from: String!\n    \"Public key of the receiver of the payment\"\n    to: String!\n    \"Amount of the payment\"\n    amount: String!\n    \"Memo attached to the transaction\"\n    memo: String\n  }\n  type Manage_Offer implements History{\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when this operation took place\"\n    created_at: Date!\n    \"Offer Id passed in. Zero signifies a new offer.\"\n    offer_id: String!\n    \"Type of Asset being offered for sale\"\n    selling_asset_type: String!\n    \"Code of Asset being offered for sale\"\n    selling_asset_code: String\n    \"Issuer of Asset being offered for sale\"\n    selling_asset_issuer: String\n    \"Type of Asset being bought\"\n    buying_asset_type: String!\n    \"Code of Asset being bought\"\n    buying_asset_code: String\n    \"Issuer of Asset being bought\"\n    buying_asset_issuer: String\n    \"Amount of asset being offered for sale\"\n    amount: String!\n    \"Price of asset being offered for sale\"\n    price: String!\n  }\n\n  type Account_Flags implements  History {\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the history record was created\"\n    created_at: Date!\n    clear_flags: [Int]\n    clear_flags_s: [Flag_Type]\n    set_flags: [Int]\n    set_flags_s: [Flag_Type]\n  }\n\n  type Home_Domain implements History {\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the history record was created\"\n    created_at: Date!\n    \"Home domain for the account\"\n    home_domain: String!\n  }\n\n  interface History {\n    id: ID!\n    \"Transaction id that this operation is part of\"\n    transaction_hash: String!\n    \"Public key for the source account\"\n    source_account: String!\n    \"Type of history\"\n    type: String!\n    \"Timestamp when the history record was created\"\n    created_at: Date!\n  }\n  type Signature {\n    \"Public key that uniquely identifies the account\"\n    public_key: String!\n    \"Flag to indicate the transaction has been signed\"\n    signed: Boolean!\n    \"Timestamp when the transaction was signed\"\n    signed_date: Date\n  }\n  type Transaction {\n    id: ID!\n    type: String\n    \"Public key for the source account\"\n    source_acct: String!\n    xdr_representation: String!\n    description: String\n    submitted: Boolean\n    hash: String\n    ledger: String\n    signers: [Signature]\n    preAuthApprovers: [Signature]\n    createdAt: Date!\n    operations: [Operation]\n  }\n  type Operation {\n    \"Type of Stellar operation\"\n    op_type: String\n    \"Public key for the source account\"\n    source_acct: String!\n    description: String\n    signatures: [Signature]\n  }\n  type Balance {\n    network: String\n    asset_code: String\n    asset_issuer: String\n    balance: String\n    buying_liabilities: String\n    selling_liabilities: String\n    asset_type: String\n  }\n  type Offer {\n    \"Offer id for the given offer\"\n    id: String!\n    \"Price for the offer\"\n    price: String!\n    \"Number of assets including in the offer\"\n    amount: String!\n    \"Active asset sale offers\"\n    selling: Asset\n    \"Active asset buy offers\"\n    buying: Asset\n  }\n\n  type Offer_Quote {\n    \"Price for the offer\"\n    price: String!\n    \"Number of assets including in the offer\"\n    amount: String!\n  }\n  type Orderbook {\n    \"Open purchase offers for a given asset\"\n    bids: [Offer_Quote]\n    \"Open sell offers for a given asset\"\n    asks: [Offer_Quote]\n    \"Asset being offered\"\n    base: Asset\n    \"Asset being asked for in exchange\"\n    counter: Asset\n  }\n\n  type Fee{\n    \"Name of the fee\"\n    name: String!\n    \"Description of the fee\"\n    description: String!\n    \"Amount the fee will be charged\"\n    rate: String!\n    \"Asset that will be used to cover the fee\"\n    type: String!\n  }\n\n  type Query {\n    \"Query to retrieve list of accounts\"\n    getAccounts: [Account]\n\n    \"Query to retrieve a single account\"\n    getAccount(\n      \"Public key that uniquely identifies the account\"\n      public_key: String!\n    ): Account\n\n    \"Query to retrieve account balances for a single account\"\n    getBalances(\n      \"Public key that uniquely identifies the account\"\n      public_key: String!\n    ): [Balance]\n\n    \"Query to retrieve list of assets\"\n    getAssets: [Asset]\n\n    \"Query to retrieve account history for a single account\"\n    getHistory(\n      \"Public key that uniquely identifies the account\"\n      public_key: String!\n      \"Filter for retrieving specific history types\"\n      type: String\n    ): [History]\n\n    \"Query to retrieve active offers for a single account\"\n    getOffers(\n      \"Public key that uniquely identifies the account\"\n      public_key: String!\n    ): [Offer]\n\n\n    \"Query to retrieve account history for a single account\"\n    getOrderbook(\n      \"Code of Asset being offered for sale\"\n      sell_asset_code: String!\n      \"Issuer of Asset being offered for sale\"\n      sell_asset_issuer: String\n      \"Type of Asset being bought\"\n      buy_asset_code: String!\n      \"Issuer of Asset being bought\"\n      buy_asset_issuer: String\n    ): Orderbook\n\n    \"Query to retrieve list of in process transactions for an account\"\n    getInitiatedTransactions(\n      \"Public key that uniquely identifies the account\"\n      public_key: String!\n    ): [Transaction]\n\n    \"Query to retrieve list of in transactions to sign for an account\"\n    getTransactionsToSign(\n      \"Public key that uniquely identifies the account\"\n      public_key: String!\n    ): [Transaction]\n\n    \"Query to retrieve details about a given fee\"\n    getFee(\n      \"Unique identifier to retrieve the Fee\"\n      type: String!\n    ): Fee\n\n  }\n  type Mutation {\n    \"Create a new account\"\n    createAccount(\n      \"The description of the account\"\n      description: String\n      \"User provided passphrase used to encrypt/decrypt secret during transactions\"\n      passphrase: String!\n      \"Set the flag requiring other trustors to be authorized before trusting this account's assets\"\n      trust_auth_required: Boolean\n      \"Set the flag requiring this account to use pre-authorized transactions\"\n      pre_authorize_transactions: Boolean\n      \"Set the home domain for the account\"\n      home_domain: String\n    ): Account\n\n    \"Create a new account from an existing Account\"\n    createAccountFromSource(\n      \"The description of the account\"\n      description: String\n      \"Public Key of the source account\"\n      source_public_key: String!\n      \"Secret of the source account\"\n      source_secret: String!\n      \"User provided passphrase used to encrypt/decrypt secret during transactions\"\n      passphrase: String!\n      \"Initial balance to seed the account with\"\n      initial_balance: String!\n      \"Set the flag requiring other trustors to be authorized before trusting this account's assets\"\n      trust_auth_required: Boolean\n      \"Set the flag requiring this account to use pre-authorized transactions\"\n      pre_authorize_transactions: Boolean\n      \"Set the home domain for the account\"\n      home_domain: String\n    ): Account\n\n    \"Create a new asset owned by an existing Account\"\n    createAsset(\n      \"Alphanumeric code that uniquely identifies the asset\"\n      asset_code: String!\n      \"Public key of the asset issuer (creator)\"\n      asset_issuer: String!\n      \"The description of the asset\"\n      description: String\n    ): Asset\n\n    \"Initiate a signer transaction\"\n    createSignerTransaction(\n      \"Public key of the owner of the account\"\n      public_key: String!\n      \"Public key of the signer to add to the account\"\n      signer: String!\n      \"Weight assigned to the added signer for transactions on this account\"\n      weight: Int!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Initiate a transaction for establishing thresholds and weights for account transactions\"\n    createWeightThresholdTransaction(\n      \"Public key of the owner of the account\"\n      public_key: String!\n      \"Master key signing weight for the account\"\n      weight: Int!\n      \"Signing weight for low threshold transactions on the account\"\n      low: Int!\n      \"Signing weight for medium threshold transactions on the account\"\n      medium: Int!\n      \"Signing weight for high threshold transactions on the account\"\n      high: Int!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Create a payment for a given account\"\n    createPayment(\n      \"Public key of the owner of the account\"\n      sender_public_key: String!\n      \"Public key of the recipient of the poyment\"\n      receiver_public_key: String!\n      \"Alphanumeric code that uniquely identifies the asset\"\n      asset_code: String!\n      \"Public key of the issuer of the asset\"\n      asset_issuer: String!\n      \"Amount of the asset to distribute\"\n      amount: String!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Initiate a transaction for allowing trust of a given asset\"\n    createAllowTrustTransaction(\n      \"Public key of the issuer of the asset\"\n      asset_issuer: String!\n      \"Alphanumeric code that uniquely identifies the asset\"\n      asset_code: String!\n      \"Public key of the trustor of the asset\"\n      trustor_public_key: String!\n      \"Boolean indicating whether or not to allow (revoke) trust\"\n      authorize_trust: Boolean!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Initiate a transaction for establishing trust for a given asset\"\n    createTrustTransaction(\n      \"Public key of the owner of the account\"\n      trustor_public_key: String!\n      \"Alphanumeric code that uniquely identifies the asset\"\n      asset_code: String!\n      \"Public key of the issuer of the asset\"\n      asset_issuer: String!\n      \"Maximum amount of the asset to trust\"\n      limit: String!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Initiate a transaction for creating an offer to buy/sell/exchange an asset\"\n    createOffer(\n      \"Public key of the account\"\n      public_key: String!\n      \"Alphanumeric code that identifies the asset being sold\"\n      sell_asset_code: String!\n      \"Public key issuer of the asset being offered for sale\"\n      sell_asset_issuer: String\n      \"Amount of the asset being offered for sale\"\n      sell_amount: String!\n      \"Alphanumeric code that identifies the asset being bought\"\n      buy_asset_code: String!\n      \"Public key issuer of the asset being bought\"\n      buy_asset_issuer: String\n      \"Amount of the asset being bought\"\n      buy_amount: String!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Initiate a transaction for updating an existing offer to buy/sell/exchange an asset\"\n    updateOffer(\n      \"Public key of the account\"\n      public_key: String!\n      \"Offer ID of the existing offer that is being updated\"\n      offer_id: String!\n      \"Alphanumeric code that identifies the asset being sold\"\n      sell_asset_code: String!\n      \"Public key issuer of the asset being offered for sale\"\n      sell_asset_issuer: String\n      \"Amount of the asset being offered for sale\"\n      sell_amount: String!\n      \"Alphanumeric code that identifies the asset being bought\"\n      buy_asset_code: String!\n      \"Public key issuer of the asset being bought\"\n      buy_asset_issuer: String\n      \"Amount of the asset being bought\"\n      buy_amount: String!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    \"Initiate a transaction for deleting an existing offer to buy/sell/exchange an asset\"\n    deleteOffer(\n      \"Public key of the account\"\n      public_key: String!\n      \"Offer ID of the existing offer that is being deleted\"\n      offer_id: String!\n      \"Alphanumeric code that identifies the asset being sold\"\n      sell_asset_code: String!\n      \"Public key issuer of the asset being offered for sale\"\n      sell_asset_issuer: String\n      \"Alphanumeric code that identifies the asset being bought\"\n      buy_asset_code: String!\n      \"Public key issuer of the asset being bought\"\n      buy_asset_issuer: String\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    createFlagTransaction(\n      \"Public key of the account\"\n      public_key: String!\n      \"Flag operation\"\n      flag_operation: String!\n      \"Flag to set\"\n      flag_to_set: String!\n      \"Optional flag making this a pre-authorized transaction\"\n      pre_authorize_transaction: Boolean\n    ): Transaction\n\n    signTransaction(\n      \"Public key of the owner of the transaction\"\n      public_key: String!\n      \"User provided passphrase used to decrypt account secret during transactions\"\n      passphrase: String!\n      \"Transaction id that uniquely identifies the transaction to sign\"\n      transaction_id: String!\n    ): Transaction\n\n    preAuthorizeTransaction(\n      \"Public key of the owner of the transaction\"\n      public_key: String!\n      \"User provided passphrase used to decrypt account secret during transactions\"\n      passphrase: String!\n      \"Transaction id that uniquely identifies the transaction to pre-authorize\"\n      transaction_id: String!\n      \"Public key of approver that can perform final submission of pre-authorized transaction\"\n      final_approver: String!\n    ): Transaction\n\n    submitPreAuthorizedTransaction(\n      \"Transaction id that uniquely identifies the pre-authorized transaction to submit\"\n      transaction_id: String!\n      \"Public key of approver performing final submission of pre-authorized transaction\"\n      final_approver: String!\n    ): Transaction\n  }\n`;\n\nmodule.exports = typeDefs\n"]}