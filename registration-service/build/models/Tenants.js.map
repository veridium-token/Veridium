{"version":3,"sources":["../../src/models/Tenants.js"],"names":["log4js","require","logger","getLogger","level","process","env","LOG_LEVEL","mongoose","TenantSchema","Schema","name","type","String","unique","min","required","read","usePushEach","timestamps","Tenant","model","module","exports","Tenants","constructor","trace","createTenant","tenantToSignUp","newTenant","_tenant","save","findById","id","tenant","findByName","findOne","listTenants","allTenants","find","deleteTenant","tenantToDelete","findByIdAndDelete"],"mappings":";;;;AAAA,MAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,MAAMC,SAASF,OAAOG,SAAP,CAAiB,SAAjB,CAAf;AACAD,OAAOE,KAAP,GAAeC,QAAQC,GAAR,CAAYC,SAAZ,IAAyB,OAAxC;;AAEA,MAAMC,WAAWP,QAAQ,UAAR,CAAjB;AACAA,QAAQ,iCAAR;;AAEA,MAAMQ,eAAe,IAAID,SAASE,MAAb,CACjB;AACIC,UAAM;AACFC,cAAMC,MADJ;AAEFC,gBAAQ,IAFN;AAGFC,aAAK,CAAC,CAAD,EAAI,0BAAJ,CAHH;AAIFC,kBAAU,CAAC,IAAD,EAAO,+BAAP;AAJR;AADV,CADiB,EASjB;AACIC,UAAM,SADV;AAEIC,iBAAa,IAFjB;AAGIC,gBAAY;AAHhB,CATiB,CAArB;;AAgBA,MAAMC,SAASZ,SAASa,KAAT,CAAe,QAAf,EAAyBZ,YAAzB,CAAf;;AAEAa,OAAOC,OAAP,GAAiB,MAAMC,OAAN,CAAc;;AAE3BC,kBAAc;AACVvB,eAAOwB,KAAP,CAAa,cAAb;AACAxB,eAAOwB,KAAP,CAAa,aAAb;AACH;AACKC,gBAAN,CAAmBC,cAAnB,EAAmC;AAAA;AAC/B1B,mBAAOwB,KAAP,CAAa,oBAAb,EAAmCE,cAAnC;AACA,kBAAMC,YAAY,MAAM,IAAIT,MAAJ,CAAW,EAACT,MAAMiB,cAAP,EAAX,CAAxB;AACA,kBAAME,UAAU,MAAMD,UAAUE,IAAV,EAAtB;AACA7B,mBAAOwB,KAAP,CAAa,mBAAb,EAAkCI,OAAlC;AACA,mBAAOA,OAAP;AAL+B;AAMlC;AACKE,YAAN,CAAgBC,EAAhB,EAAoB;AAAA;AAChB/B,mBAAOwB,KAAP,CAAa,gBAAb,EAA+BO,EAA/B;AACA,kBAAMC,SAAS,MAAMd,OAAOY,QAAP,CAAgBC,EAAhB,CAArB;AACA/B,mBAAOwB,KAAP,CAAa,eAAb,EAA8BQ,MAA9B;AACA,mBAAOA,MAAP;AAJgB;AAKnB;AACKC,cAAN,CAAkBxB,IAAlB,EAAwB;AAAA;AACpBT,mBAAOwB,KAAP,CAAa,kBAAb,EAAiCf,IAAjC;AACA,kBAAMuB,SAAS,MAAMd,OAAOgB,OAAP,CAAe,EAAC,QAAOzB,IAAR,EAAf,CAArB;AACAT,mBAAOwB,KAAP,CAAa,iBAAb,EAAgCQ,MAAhC;AACA,mBAAOA,MAAP;AAJoB;AAKvB;AACKG,eAAN,GAAqB;AAAA;AACjBnC,mBAAOwB,KAAP,CAAa,mBAAb;AACA,kBAAMY,aAAa,MAAMlB,OAAOmB,IAAP,CAAY,EAAZ,CAAzB;AACArC,mBAAOwB,KAAP,CAAa,kBAAb,EAAiCY,UAAjC;AACA,mBAAOA,UAAP;AAJiB;AAKpB;AACKE,gBAAN,CAAoBP,EAApB,EAAwB;AAAA;AACpB/B,mBAAOwB,KAAP,CAAa,oBAAb,EAAmCO,EAAnC;AACA,kBAAMQ,iBAAiB,MAAMrB,OAAOsB,iBAAP,CAAyBT,EAAzB,CAA7B;AACA/B,mBAAOwB,KAAP,CAAa,mBAAb,EAAkCe,cAAlC;AACA,mBAAOA,cAAP;AAJoB;AAKvB;AApC0B,CAA/B","file":"Tenants.js","sourcesContent":["const log4js = require('log4js');\nconst logger = log4js.getLogger('Tenants');\nlogger.level = process.env.LOG_LEVEL || 'debug';\n\nconst mongoose = require('mongoose');\nrequire('../config/initializers/database');\n\nconst TenantSchema = new mongoose.Schema(\n    {\n        name: {\n            type: String,\n            unique: true,\n            min: [4, 'tenant name is too short'],\n            required: [true, 'Missing required tenant name.']\n        }\n    },\n    {\n        read: 'nearest',\n        usePushEach: true,\n        timestamps: true\n    }\n);\n\nconst Tenant = mongoose.model('Tenant', TenantSchema);\n\nmodule.exports = class Tenants {\n\n    constructor() {\n        logger.trace('<init> entry');\n        logger.trace('<init> exit');\n    }\n    async createTenant(tenantToSignUp) {\n        logger.trace('createTenant entry', tenantToSignUp);\n        const newTenant = await new Tenant({name: tenantToSignUp});\n        const _tenant = await newTenant.save();\n        logger.trace('createTenant exit', _tenant);\n        return _tenant;\n    }\n    async findById (id) {\n        logger.trace('findById entry', id);\n        const tenant = await Tenant.findById(id);\n        logger.trace('findById exit', tenant);\n        return tenant;\n    }\n    async findByName (name) {\n        logger.trace('findByName entry', name);\n        const tenant = await Tenant.findOne({'name':name});\n        logger.trace('findByName exit', tenant);\n        return tenant;\n    }\n    async listTenants () {\n        logger.trace('listTenants entry');\n        const allTenants = await Tenant.find({});\n        logger.trace('listTenants exit', allTenants);\n        return allTenants;\n    }\n    async deleteTenant (id) {\n        logger.trace('deleteTenant entry', id);\n        const tenantToDelete = await Tenant.findByIdAndDelete(id);\n        logger.trace('deleteTenant exit', tenantToDelete);\n        return tenantToDelete;\n    }\n};\n"]}